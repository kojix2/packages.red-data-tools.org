# -*- ruby -*-

require_relative "../packages-red-data-tools-org-package-task"

class RedDataToolsReleasePackageTask < PackagesRedDataToolsOrgPackageTask
  def initialize
    super("red-data-tools-release",
          repository_version,
          latest_commit_time(File.join(__dir__, "..")))
  end

  def define
    super
    define_yum_latest_task
  end

  private
  def shorten_gpg_uid(uid)
    uid[-8..-1]
  end

  def rpm_gpg_key_path(uid)
    "RPM-GPG-KEY-#{shorten_gpg_uid(uid).downcase}"
  end

  def generate_gpg_keys
    repository_gpg_uids.each do |gpg_uid|
      path = "#{@archive_base_name}/#{rpm_gpg_key_path(gpg_uid)}"
      unless system("gpg", "--list-keys", gpg_uid, :out => IO::NULL)
        sh("gpg",
           "--keyserver", "keyserver.ubuntu.com",
           "--recv-key", gpg_uid)
      end
      sh("gpg", "--armor", "--export", gpg_uid, :out => path)
    end
  end

  def generate_repo_files
    targets = [
      {
        id: "centos",
        label: "CentOS $releasever",
        version: "$releasever",
        enabled: "1",
      },
      {
        id: "amazon-linux",
        label: "Amazon Linux 2",
        version: "7",
        enabled: "0",
      },
    ]
    targets.each do |target|
      repo_path = "#{@archive_base_name}/#{repository_name}-#{target[:id]}.repo"
      File.open(repo_path, "w") do |repo|
        repo.puts(<<-REPOSITORY)
[#{repository_name}-#{target[:id]}]
name=#{repository_label} for #{target[:label]} - $basearch
baseurl=#{repository_url}/centos/#{target[:version]}/$basearch/
gpgcheck=1
enabled=#{target[:enabled]}
        REPOSITORY
        prefix = "gpgkey="
        repository_gpg_uids.each do |gpg_uid|
          repo.puts(<<-REPOSITORY)
#{prefix}file:///etc/pki/rpm-gpg/#{rpm_gpg_key_path(gpg_uid)}
          REPOSITORY
          prefix = "       "
        end
      end
    end
  end

  def define_archive_task
    file @archive_name do
      rm_rf(@archive_base_name)
      mkdir(@archive_base_name)
      generate_gpg_keys
      generate_repo_files
      sh("tar", "czf", @archive_name, @archive_base_name)
      rm_rf(@archive_base_name)
    end
  end

  def enable_apt?
    false
  end

  def yum_targets_default
    [
      "centos-8",
    ]
  end

  def define_yum_latest_task
    namespace :yum do
      latest_rpms = []
      yum_targets.each do |target|
        distribution, version = target.split("-", 2)
        rpm = [
          yum_dir,
          "repositories",
          distribution,
          version,
          "x86_64",
          "Packages",
          "#{@package}-#{@rpm_version}-#{@rpm_release}.noarch.rpm",
        ].join("/")
        latest_rpm = [
          yum_dir,
          "repositories",
          distribution,
          version,
          "#{@package}-latest.noarch.rpm",
        ].join("/")
        latest_rpms << latest_rpm
        file latest_rpm => rpm do
          cp(rpm, latest_rpm)
        end
      end
      task :latest => latest_rpms
      task :release => :latest
    end
  end
end

task = RedDataToolsReleasePackageTask.new
task.define
