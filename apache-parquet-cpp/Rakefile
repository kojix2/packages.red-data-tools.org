# -*- ruby -*-

ENV["CENTOS_VERSIONS"] ||= "7"

require_relative "../vendor/arrow/dev/tasks/linux-packages/package-task"

class ApacheParquetCppPackageTask < PackageTask
  def initialize
    release_time = latest_commit_time(source_dir)
    @rc = detect_rc
    super("apache-parquet-cpp", detect_version(release_time), release_time)
    @rpm_package = "parquet"
  end

  private
  def source_dir
    File.join(__dir__, "..", "vendor", "parquet-cpp")
  end

  def detect_rc
    Dir.chdir(source_dir) do
      if /-(rc\d+)\z/ =~ `git describe`.chomp
        $1
      else
        nil
      end
    end
  end

  def detect_version(release_time)
    version_path = File.join(source_dir, ".parquetcppversion")
    version = File.read(version_path).strip
    formatted_release_time = release_time.strftime("%Y%m%d")
    version.gsub(/-SNAPSHOT\z/) {".#{formatted_release_time}"}
  end

  def define_archive_task
    file @archive_name do
      if /\A\d+\.\d+\.\d+\z/ =~ @version
        if @rc
          download_rc
        else
          download_archive
        end
      else
        build_archive
      end
    end
  end

  def download_rc
    base_url = "https://dist.apache.org/repos/dist/dev/parquet"
    base_name = "apache-parquet-cpp-#{@version}"
    download("#{base_ur}/#{base_name}-#{@rc}/#{base_name}.tar.gz",
             ".")
  end

  def download_archive
    mirror_base_url = "https://www.apache.org/dyn/closer.cgi/parquet"
    mirror_list_url =
      "#{mirror_base_url}/apache-parquet-cpp-#{@version}/#{@archive_name}"
    open(mirror_list_url) do |response|
      if /href="(.+?\/#{Regexp.escape(@archive_name)})"/ =~ response.read
        download($1, ".")
      end
    end
  end

  def build_archive
    cd(source_dir) do
      sh("git", "archive", "HEAD",
         "--prefix", "#{@archive_base_name}/",
         "--output", @full_archive_name)
    end
  end
end

task = ApacheParquetCppPackageTask.new
task.define
